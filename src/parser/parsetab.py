
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSANDEQUAL ASM BREAK CHAR CONTINUE C_CONST DIVEQUAL DO ELSE EQ FLOAT FOR GE ID IF INT LAND LE LOR MINUSEQUAL MINUSMINUS NE NUMBER OREQUAL PLUSEQUAL PLUSPLUS PRINTF RETURN S_CONST TIMESEQUAL VOID WHILE XOREQUALfile : unit\n            | file unitunit : fun_def\n            | declaration ";" fun_def : declaration_specifier ID "(" ")" compound_statement\n               | declaration_specifier ID "(" declaration_list ")" compound_statementstatement : expression ";"\n                 | declaration ";"\n                 | compound_statementexpression : ID "(" ")"\n                  | ID "(" expression_list ")" expression : ASM "(" S_CONST ")" expression : PRINTF "(" S_CONST ")" declaration_specifier : VOID\n                             | INT\n                             | CHAR\n                             | FLOAT\n                             | INT pointer\n                             | CHAR pointer\n                             | FLOAT pointerstatement : RETURN expression ";"\n                 | RETURN ";" statement : BREAK ";" statement : CONTINUE ";" statement : WHILE "(" expression ")" statementstatement : DO statement WHILE "(" expression ")" ";" statement : FOR "(" expression ";" expression ";" expression ")" statementstatement : IF "(" expression ")" statementstatement : IF "(" expression ")" statement ELSE statementdeclaration : declaration_specifier ID "[" NUMBER "]" "=" "{" expression_list "}"\n                   | declaration_specifier ID "[" NUMBER "]"\n                   | declaration_specifier ID "[" FLOAT "]" "=" "{" expression_list "}"\n                   | declaration_specifier ID "[" FLOAT "]" declaration : declaration_specifier ID "=" expression\n                   | declaration_specifier ID expression : MINUSMINUS IDexpression : ID MINUSMINUSexpression : PLUSPLUS ID expression : ID PLUSPLUS expression : ID XOREQUAL expressionexpression : ID ANDEQUAL expressionexpression : ID OREQUAL expressionexpression : ID TIMESEQUAL expressionexpression : ID DIVEQUAL expressionexpression : ID PLUSEQUAL expressionexpression : ID MINUSEQUAL expressionexpression : ID "=" expressionexpression_list : expression\n                       | expression_list \',\' expressiondeclaration_list : declaration\n                        | declaration_list \',\' declarationexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'&\' expression\n                  | expression \'|\' expression\n                  | expression \'^\' expressionexpression : \'~\' expression %prec UMINUSexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\' expression : ID \'[\' expression \']\'expression : ID \'[\' expression \']\' \'=\' expressionexpression : NUMBER\n                  | FLOATexpression : IDexpression : \'&\' IDexpression : \'&\' ID \'[\' expression \']\' expression : "*" ID "=" expressionexpression : \'*\' IDpointer : \'*\'\n               | pointer \'*\' expression : C_CONSTexpression : eq_expeq_exp : expression EQ expression\n              | expression NE expression\n              | expression LOR expression\n              | expression LAND expression\n              | expression \'<\' expression\n              | expression \'>\' expression\n              | expression GE expression\n              | expression LE expressioncompound_statement : "{" statement_list "}"\n                          | "{" "}" statement_list : statement\n                      | statement_list statement'
    
_lr_action_items = {'VOID':([0,1,2,3,10,11,17,43,44,46,85,86,87,90,95,99,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[7,7,-1,-3,-2,-4,7,-5,7,7,7,-84,-85,-9,7,-6,-83,-86,-7,-8,-22,-23,-24,-21,7,7,-25,-28,7,-26,-29,7,-27,]),'INT':([0,1,2,3,10,11,17,43,44,46,85,86,87,90,95,99,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[8,8,-1,-3,-2,-4,8,-5,8,8,8,-84,-85,-9,8,-6,-83,-86,-7,-8,-22,-23,-24,-21,8,8,-25,-28,8,-26,-29,8,-27,]),'CHAR':([0,1,2,3,10,11,17,43,44,46,85,86,87,90,95,99,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[9,9,-1,-3,-2,-4,9,-5,9,9,9,-84,-85,-9,9,-6,-83,-86,-7,-8,-22,-23,-24,-21,9,9,-25,-28,9,-26,-29,9,-27,]),'FLOAT':([0,1,2,3,10,11,17,18,19,29,34,37,43,44,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,99,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[6,6,-1,-3,-2,-4,6,26,39,39,39,39,-5,98,6,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,98,-84,-85,-9,39,98,-6,39,39,-83,-86,-7,-8,-22,-23,-24,39,39,39,39,39,39,-21,39,98,39,39,98,-25,-28,39,98,-26,-29,98,-27,]),'$end':([1,2,3,10,11,43,86,99,135,],[0,-1,-3,-2,-4,-5,-84,-6,-83,]),';':([4,12,27,28,38,39,40,41,42,47,48,50,51,79,80,81,82,83,84,88,89,91,92,93,98,103,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,159,165,170,171,172,175,177,],[11,-35,-66,-34,-64,-65,-73,-74,-35,-31,-33,-37,-39,-36,-38,-60,-70,-67,-59,137,138,140,141,142,-65,-10,-40,-41,-42,-43,-44,-45,-46,-47,-52,-53,-54,-55,-56,-57,-58,-75,-76,-77,-78,-79,-80,-81,-82,-61,156,-11,-62,-12,-13,-69,168,-68,-30,-32,-63,178,180,]),'ID':([5,6,7,8,9,13,14,15,16,19,20,21,29,32,33,34,35,36,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,98,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[12,-17,-14,-15,-16,-20,-71,-18,-19,27,-72,42,27,79,80,27,82,83,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-84,-85,-9,27,27,-17,27,27,-83,-86,-7,-8,-22,-23,-24,27,27,27,27,27,27,-21,27,27,27,27,27,-25,-28,27,27,-26,-29,27,-27,]),'*':([6,8,9,13,14,15,16,19,20,27,28,29,34,37,38,39,40,41,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,90,91,95,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,163,164,165,166,167,168,169,172,173,174,175,176,178,179,180,181,182,183,184,],[14,14,14,20,-71,20,20,35,-72,-66,63,35,35,35,-64,-65,-73,-74,35,35,-37,-39,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,63,-36,-38,-60,-70,-67,-59,35,-84,-85,63,-9,35,35,14,-10,63,63,63,63,63,63,63,63,63,63,63,63,-54,-55,63,63,63,63,63,63,63,63,63,63,63,-61,35,35,-83,-86,-7,-8,63,-22,-23,-24,35,35,35,35,35,-11,35,-62,-12,-13,63,63,-21,63,63,63,63,35,-68,35,35,35,35,63,-25,63,63,-28,35,35,-26,63,-29,35,-27,]),'(':([12,19,27,29,30,31,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,94,95,96,97,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,158,164,166,167,168,169,173,176,178,179,180,182,183,184,],[17,29,49,29,77,78,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-84,-85,-9,29,143,29,145,146,29,29,-83,-86,-7,-8,-22,-23,-24,29,29,29,29,29,29,-21,167,29,29,29,29,29,-25,-28,29,29,-26,-29,29,-27,]),'[':([12,27,42,83,],[18,60,18,134,]),'=':([12,27,42,47,48,82,151,],[19,59,19,101,102,133,164,]),')':([17,23,24,27,28,38,39,40,41,42,47,48,49,50,51,76,79,80,81,82,83,84,100,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,149,151,152,153,154,157,160,163,165,170,171,172,174,181,],[22,45,-50,-66,-34,-64,-65,-73,-74,-35,-31,-33,103,-37,-39,130,-36,-38,-60,-70,-67,-59,-51,-10,149,-48,-40,-41,-42,-43,-44,-45,-46,-47,-52,-53,-54,-55,-56,-57,-58,-75,-76,-77,-78,-79,-80,-81,-82,-61,152,153,-11,-62,-12,-13,-69,166,169,-49,-68,-30,-32,-63,177,183,]),'NUMBER':([18,19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[25,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-84,-85,-9,38,38,38,38,-83,-86,-7,-8,-22,-23,-24,38,38,38,38,38,38,-21,38,38,38,38,38,-25,-28,38,38,-26,-29,38,-27,]),'ASM':([19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-84,-85,-9,30,30,30,30,-83,-86,-7,-8,-22,-23,-24,30,30,30,30,30,30,-21,30,30,30,30,30,-25,-28,30,30,-26,-29,30,-27,]),'PRINTF':([19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-84,-85,-9,31,31,31,31,-83,-86,-7,-8,-22,-23,-24,31,31,31,31,31,31,-21,31,31,31,31,31,-25,-28,31,31,-26,-29,31,-27,]),'MINUSMINUS':([19,27,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[32,50,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-84,-85,-9,32,32,32,32,-83,-86,-7,-8,-22,-23,-24,32,32,32,32,32,32,-21,32,32,32,32,32,-25,-28,32,32,-26,-29,32,-27,]),'PLUSPLUS':([19,27,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[33,51,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-84,-85,-9,33,33,33,33,-83,-86,-7,-8,-22,-23,-24,33,33,33,33,33,33,-21,33,33,33,33,33,-25,-28,33,33,-26,-29,33,-27,]),'~':([19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-84,-85,-9,37,37,37,37,-83,-86,-7,-8,-22,-23,-24,37,37,37,37,37,37,-21,37,37,37,37,37,-25,-28,37,37,-26,-29,37,-27,]),'-':([19,27,28,29,34,37,38,39,40,41,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,90,91,95,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,163,164,165,166,167,168,169,172,173,174,175,176,178,179,180,181,182,183,184,],[34,-66,62,34,34,34,-64,-65,-73,-74,34,34,-37,-39,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,62,-36,-38,-60,-70,-67,-59,34,-84,-85,62,-9,34,34,-65,-10,62,62,62,62,62,62,62,62,62,62,-52,-53,-54,-55,62,62,62,62,62,62,62,62,62,62,62,-61,34,34,-83,-86,-7,-8,62,-22,-23,-24,34,34,34,34,34,-11,34,-62,-12,-13,62,62,-21,62,62,62,62,34,-68,34,34,34,34,62,-25,62,62,-28,34,34,-26,62,-29,34,-27,]),'&':([19,27,28,29,34,37,38,39,40,41,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,90,91,95,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,163,164,165,166,167,168,169,172,173,174,175,176,178,179,180,181,182,183,184,],[36,-66,65,36,36,36,-64,-65,-73,-74,36,36,-37,-39,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,65,-36,-38,-60,-70,-67,-59,36,-84,-85,65,-9,36,36,-65,-10,65,65,65,65,65,65,65,65,65,65,-52,-53,-54,-55,65,65,65,65,65,65,65,65,65,65,65,-61,36,36,-83,-86,-7,-8,65,-22,-23,-24,36,36,36,36,36,-11,36,-62,-12,-13,65,65,-21,65,65,65,65,36,-68,36,36,36,36,65,-25,65,65,-28,36,36,-26,65,-29,36,-27,]),'C_CONST':([19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,90,91,95,133,134,135,136,137,138,140,141,142,143,145,146,147,148,150,156,164,166,167,168,169,173,176,178,179,180,182,183,184,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-84,-85,-9,40,40,40,40,-83,-86,-7,-8,-22,-23,-24,40,40,40,40,40,40,-21,40,40,40,40,40,-25,-28,40,40,-26,-29,40,-27,]),'{':([22,44,45,85,86,87,90,95,101,102,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[44,44,44,44,-84,-85,-9,44,147,148,-83,-86,-7,-8,-22,-23,-24,-21,44,44,-25,-28,44,-26,-29,44,-27,]),',':([23,24,27,28,38,39,40,41,42,47,48,50,51,79,80,81,82,83,84,100,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,149,151,152,153,154,161,162,163,165,170,171,172,],[46,-50,-66,-34,-64,-65,-73,-74,-35,-31,-33,-37,-39,-36,-38,-60,-70,-67,-59,-51,-10,150,-48,-40,-41,-42,-43,-44,-45,-46,-47,-52,-53,-54,-55,-56,-57,-58,-75,-76,-77,-78,-79,-80,-81,-82,-61,-11,-62,-12,-13,-69,150,150,-49,-68,-30,-32,-63,]),']':([25,26,27,38,39,40,41,50,51,79,80,81,82,83,84,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,149,151,152,153,154,155,165,172,],[47,48,-66,-64,-65,-73,-74,-37,-39,-36,-38,-60,-70,-67,-59,-10,-40,-41,-42,-43,-44,-45,-46,-47,151,-52,-53,-54,-55,-56,-57,-58,-75,-76,-77,-78,-79,-80,-81,-82,-61,-11,-62,-12,-13,-69,165,-68,-63,]),'XOREQUAL':([27,],[52,]),'ANDEQUAL':([27,],[53,]),'OREQUAL':([27,],[54,]),'TIMESEQUAL':([27,],[55,]),'DIVEQUAL':([27,],[56,]),'PLUSEQUAL':([27,],[57,]),'MINUSEQUAL':([27,],[58,]),'+':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,61,-64,-65,-73,-74,-37,-39,61,-36,-38,-60,-70,-67,-59,61,-65,-10,61,61,61,61,61,61,61,61,61,61,-52,-53,-54,-55,61,61,61,61,61,61,61,61,61,61,61,-61,61,-11,-62,-12,-13,61,61,61,61,61,61,-68,61,61,61,61,]),'/':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,64,-64,-65,-73,-74,-37,-39,64,-36,-38,-60,-70,-67,-59,64,-65,-10,64,64,64,64,64,64,64,64,64,64,64,64,-54,-55,64,64,64,64,64,64,64,64,64,64,64,-61,64,-11,-62,-12,-13,64,64,64,64,64,64,-68,64,64,64,64,]),'|':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,66,-64,-65,-73,-74,-37,-39,66,-36,-38,-60,-70,-67,-59,66,-65,-10,66,66,66,66,66,66,66,66,66,66,-52,-53,-54,-55,66,66,66,66,66,66,66,66,66,66,66,-61,66,-11,-62,-12,-13,66,66,66,66,66,66,-68,66,66,66,66,]),'^':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,67,-64,-65,-73,-74,-37,-39,67,-36,-38,-60,-70,-67,-59,67,-65,-10,67,67,67,67,67,67,67,67,67,67,-52,-53,-54,-55,67,67,67,67,67,67,67,67,67,67,67,-61,67,-11,-62,-12,-13,67,67,67,67,67,67,-68,67,67,67,67,]),'EQ':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,68,-64,-65,-73,-74,-37,-39,68,-36,-38,-60,-70,-67,-59,68,-65,-10,68,68,68,68,68,68,68,68,68,68,-52,-53,-54,-55,68,68,68,68,68,68,68,68,68,68,68,-61,68,-11,-62,-12,-13,68,68,68,68,68,68,-68,68,68,68,68,]),'NE':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,69,-64,-65,-73,-74,-37,-39,69,-36,-38,-60,-70,-67,-59,69,-65,-10,69,69,69,69,69,69,69,69,69,69,-52,-53,-54,-55,69,69,69,69,69,69,69,69,69,69,69,-61,69,-11,-62,-12,-13,69,69,69,69,69,69,-68,69,69,69,69,]),'LOR':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,70,-64,-65,-73,-74,-37,-39,70,-36,-38,-60,-70,-67,-59,70,-65,-10,70,70,70,70,70,70,70,70,70,70,-52,-53,-54,-55,70,70,70,70,70,70,70,70,70,70,70,-61,70,-11,-62,-12,-13,70,70,70,70,70,70,-68,70,70,70,70,]),'LAND':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,71,-64,-65,-73,-74,-37,-39,71,-36,-38,-60,-70,-67,-59,71,-65,-10,71,71,71,71,71,71,71,71,71,71,-52,-53,-54,-55,71,71,71,71,71,71,71,71,71,71,71,-61,71,-11,-62,-12,-13,71,71,71,71,71,71,-68,71,71,71,71,]),'<':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,72,-64,-65,-73,-74,-37,-39,72,-36,-38,-60,-70,-67,-59,72,-65,-10,72,72,72,72,72,72,72,72,72,72,-52,-53,-54,-55,72,72,72,72,72,72,72,72,72,72,72,-61,72,-11,-62,-12,-13,72,72,72,72,72,72,-68,72,72,72,72,]),'>':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,73,-64,-65,-73,-74,-37,-39,73,-36,-38,-60,-70,-67,-59,73,-65,-10,73,73,73,73,73,73,73,73,73,73,-52,-53,-54,-55,73,73,73,73,73,73,73,73,73,73,73,-61,73,-11,-62,-12,-13,73,73,73,73,73,73,-68,73,73,73,73,]),'GE':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,74,-64,-65,-73,-74,-37,-39,74,-36,-38,-60,-70,-67,-59,74,-65,-10,74,74,74,74,74,74,74,74,74,74,-52,-53,-54,-55,74,74,74,74,74,74,74,74,74,74,74,-61,74,-11,-62,-12,-13,74,74,74,74,74,74,-68,74,74,74,74,]),'LE':([27,28,38,39,40,41,50,51,76,79,80,81,82,83,84,88,98,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,149,151,152,153,154,155,157,159,160,163,165,172,174,175,181,],[-66,75,-64,-65,-73,-74,-37,-39,75,-36,-38,-60,-70,-67,-59,75,-65,-10,75,75,75,75,75,75,75,75,75,75,-52,-53,-54,-55,75,75,75,75,75,75,75,75,75,75,75,-61,75,-11,-62,-12,-13,75,75,75,75,75,75,-68,75,75,75,75,]),'}':([27,38,39,40,41,44,50,51,79,80,81,82,83,84,85,86,87,90,103,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,135,136,137,138,140,141,142,149,151,152,153,154,156,161,162,163,165,172,173,176,180,182,184,],[-66,-64,-65,-73,-74,86,-37,-39,-36,-38,-60,-70,-67,-59,135,-84,-85,-9,-10,-48,-40,-41,-42,-43,-44,-45,-46,-47,-52,-53,-54,-55,-56,-57,-58,-75,-76,-77,-78,-79,-80,-81,-82,-61,-83,-86,-7,-8,-22,-23,-24,-11,-62,-12,-13,-69,-21,170,171,-49,-68,-63,-25,-28,-26,-29,-27,]),'RETURN':([44,85,86,87,90,95,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[91,91,-84,-85,-9,91,-83,-86,-7,-8,-22,-23,-24,-21,91,91,-25,-28,91,-26,-29,91,-27,]),'BREAK':([44,85,86,87,90,95,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[92,92,-84,-85,-9,92,-83,-86,-7,-8,-22,-23,-24,-21,92,92,-25,-28,92,-26,-29,92,-27,]),'CONTINUE':([44,85,86,87,90,95,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[93,93,-84,-85,-9,93,-83,-86,-7,-8,-22,-23,-24,-21,93,93,-25,-28,93,-26,-29,93,-27,]),'WHILE':([44,85,86,87,90,95,135,136,137,138,140,141,142,144,156,166,169,173,176,179,180,182,183,184,],[94,94,-84,-85,-9,94,-83,-86,-7,-8,-22,-23,-24,158,-21,94,94,-25,-28,94,-26,-29,94,-27,]),'DO':([44,85,86,87,90,95,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[95,95,-84,-85,-9,95,-83,-86,-7,-8,-22,-23,-24,-21,95,95,-25,-28,95,-26,-29,95,-27,]),'FOR':([44,85,86,87,90,95,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[96,96,-84,-85,-9,96,-83,-86,-7,-8,-22,-23,-24,-21,96,96,-25,-28,96,-26,-29,96,-27,]),'IF':([44,85,86,87,90,95,135,136,137,138,140,141,142,156,166,169,173,176,179,180,182,183,184,],[97,97,-84,-85,-9,97,-83,-86,-7,-8,-22,-23,-24,-21,97,97,-25,-28,97,-26,-29,97,-27,]),'S_CONST':([77,78,],[131,132,]),'ELSE':([86,90,135,137,138,140,141,142,156,173,176,180,182,184,],[-84,-9,-83,-7,-8,-22,-23,-24,-21,-25,179,-26,-29,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'unit':([0,1,],[2,10,]),'fun_def':([0,1,],[3,3,]),'declaration':([0,1,17,44,46,85,95,166,169,179,183,],[4,4,24,89,100,89,89,89,89,89,89,]),'declaration_specifier':([0,1,17,44,46,85,95,166,169,179,183,],[5,5,21,21,21,21,21,21,21,21,21,]),'pointer':([6,8,9,98,],[13,15,16,13,]),'declaration_list':([17,],[23,]),'expression':([19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,91,95,133,134,143,145,146,147,148,150,164,166,167,168,169,178,179,183,],[28,76,81,84,88,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,88,139,88,154,155,157,159,160,105,105,163,172,88,174,175,88,181,88,88,]),'eq_exp':([19,29,34,37,44,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,91,95,133,134,143,145,146,147,148,150,164,166,167,168,169,178,179,183,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'compound_statement':([22,44,45,85,95,166,169,179,183,],[43,90,99,90,90,90,90,90,90,]),'statement_list':([44,],[85,]),'statement':([44,85,95,166,169,179,183,],[87,136,144,173,176,182,184,]),'expression_list':([49,147,148,],[104,161,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> unit','file',1,'p_file','parser_ply.py',132),
  ('file -> file unit','file',2,'p_file','parser_ply.py',133),
  ('unit -> fun_def','unit',1,'p_unit','parser_ply.py',141),
  ('unit -> declaration ;','unit',2,'p_unit','parser_ply.py',142),
  ('fun_def -> declaration_specifier ID ( ) compound_statement','fun_def',5,'p_statement_fun_def','parser_ply.py',147),
  ('fun_def -> declaration_specifier ID ( declaration_list ) compound_statement','fun_def',6,'p_statement_fun_def','parser_ply.py',148),
  ('statement -> expression ;','statement',2,'p_statement_expr','parser_ply.py',156),
  ('statement -> declaration ;','statement',2,'p_statement_expr','parser_ply.py',157),
  ('statement -> compound_statement','statement',1,'p_statement_expr','parser_ply.py',158),
  ('expression -> ID ( )','expression',3,'p_statement_fun_call','parser_ply.py',163),
  ('expression -> ID ( expression_list )','expression',4,'p_statement_fun_call','parser_ply.py',164),
  ('expression -> ASM ( S_CONST )','expression',4,'p_statement_asm_call','parser_ply.py',172),
  ('expression -> PRINTF ( S_CONST )','expression',4,'p_statement_str_call','parser_ply.py',177),
  ('declaration_specifier -> VOID','declaration_specifier',1,'p_declaration_specifier','parser_ply.py',182),
  ('declaration_specifier -> INT','declaration_specifier',1,'p_declaration_specifier','parser_ply.py',183),
  ('declaration_specifier -> CHAR','declaration_specifier',1,'p_declaration_specifier','parser_ply.py',184),
  ('declaration_specifier -> FLOAT','declaration_specifier',1,'p_declaration_specifier','parser_ply.py',185),
  ('declaration_specifier -> INT pointer','declaration_specifier',2,'p_declaration_specifier','parser_ply.py',186),
  ('declaration_specifier -> CHAR pointer','declaration_specifier',2,'p_declaration_specifier','parser_ply.py',187),
  ('declaration_specifier -> FLOAT pointer','declaration_specifier',2,'p_declaration_specifier','parser_ply.py',188),
  ('statement -> RETURN expression ;','statement',3,'p_statement_return','parser_ply.py',196),
  ('statement -> RETURN ;','statement',2,'p_statement_return','parser_ply.py',197),
  ('statement -> BREAK ;','statement',2,'p_statement_break','parser_ply.py',205),
  ('statement -> CONTINUE ;','statement',2,'p_statement_continue','parser_ply.py',210),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_statement_while_def','parser_ply.py',215),
  ('statement -> DO statement WHILE ( expression ) ;','statement',7,'p_statement_dowhile_def','parser_ply.py',220),
  ('statement -> FOR ( expression ; expression ; expression ) statement','statement',9,'p_statement_for_def','parser_ply.py',225),
  ('statement -> IF ( expression ) statement','statement',5,'p_statement_if_def','parser_ply.py',230),
  ('statement -> IF ( expression ) statement ELSE statement','statement',7,'p_statement_if_else_def','parser_ply.py',235),
  ('declaration -> declaration_specifier ID [ NUMBER ] = { expression_list }','declaration',9,'p_statement_arr_def','parser_ply.py',241),
  ('declaration -> declaration_specifier ID [ NUMBER ]','declaration',5,'p_statement_arr_def','parser_ply.py',242),
  ('declaration -> declaration_specifier ID [ FLOAT ] = { expression_list }','declaration',9,'p_statement_arr_def','parser_ply.py',243),
  ('declaration -> declaration_specifier ID [ FLOAT ]','declaration',5,'p_statement_arr_def','parser_ply.py',244),
  ('declaration -> declaration_specifier ID = expression','declaration',4,'p_statement_def','parser_ply.py',252),
  ('declaration -> declaration_specifier ID','declaration',2,'p_statement_def','parser_ply.py',253),
  ('expression -> MINUSMINUS ID','expression',2,'p_statement_rminusminus','parser_ply.py',261),
  ('expression -> ID MINUSMINUS','expression',2,'p_statement_minusminus','parser_ply.py',266),
  ('expression -> PLUSPLUS ID','expression',2,'p_statement_rplusplus','parser_ply.py',271),
  ('expression -> ID PLUSPLUS','expression',2,'p_statement_plusplus','parser_ply.py',276),
  ('expression -> ID XOREQUAL expression','expression',3,'p_statement_xoreq','parser_ply.py',281),
  ('expression -> ID ANDEQUAL expression','expression',3,'p_statement_andeq','parser_ply.py',286),
  ('expression -> ID OREQUAL expression','expression',3,'p_statement_oreq','parser_ply.py',291),
  ('expression -> ID TIMESEQUAL expression','expression',3,'p_statement_muleq','parser_ply.py',296),
  ('expression -> ID DIVEQUAL expression','expression',3,'p_statement_diveq','parser_ply.py',301),
  ('expression -> ID PLUSEQUAL expression','expression',3,'p_statement_pluseq','parser_ply.py',306),
  ('expression -> ID MINUSEQUAL expression','expression',3,'p_statement_minuseq','parser_ply.py',311),
  ('expression -> ID = expression','expression',3,'p_statement_assign','parser_ply.py',316),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser_ply.py',321),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','parser_ply.py',322),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser_ply.py',330),
  ('declaration_list -> declaration_list , declaration','declaration_list',3,'p_declaration_list','parser_ply.py',331),
  ('expression -> expression + expression','expression',3,'p_expression_binop','parser_ply.py',339),
  ('expression -> expression - expression','expression',3,'p_expression_binop','parser_ply.py',340),
  ('expression -> expression * expression','expression',3,'p_expression_binop','parser_ply.py',341),
  ('expression -> expression / expression','expression',3,'p_expression_binop','parser_ply.py',342),
  ('expression -> expression & expression','expression',3,'p_expression_binop','parser_ply.py',343),
  ('expression -> expression | expression','expression',3,'p_expression_binop','parser_ply.py',344),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','parser_ply.py',345),
  ('expression -> ~ expression','expression',2,'p_expression_not','parser_ply.py',350),
  ('expression -> - expression','expression',2,'p_expression_uminus','parser_ply.py',355),
  ('expression -> ( expression )','expression',3,'p_expression_group','parser_ply.py',360),
  ('expression -> ID [ expression ]','expression',4,'p_expression_arr_name','parser_ply.py',365),
  ('expression -> ID [ expression ] = expression','expression',6,'p_expression_arr_assign','parser_ply.py',370),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser_ply.py',375),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser_ply.py',376),
  ('expression -> ID','expression',1,'p_expression_name','parser_ply.py',381),
  ('expression -> & ID','expression',2,'p_expression_address','parser_ply.py',386),
  ('expression -> & ID [ expression ]','expression',5,'p_expression_arr_address','parser_ply.py',391),
  ('expression -> * ID = expression','expression',4,'p_statement_ptr_assign','parser_ply.py',396),
  ('expression -> * ID','expression',2,'p_expression_pointer_access','parser_ply.py',401),
  ('pointer -> *','pointer',1,'p_expression_pointer','parser_ply.py',406),
  ('pointer -> pointer *','pointer',2,'p_expression_pointer','parser_ply.py',407),
  ('expression -> C_CONST','expression',1,'p_expression_char','parser_ply.py',415),
  ('expression -> eq_exp','expression',1,'p_cond_exp','parser_ply.py',420),
  ('eq_exp -> expression EQ expression','eq_exp',3,'p_eq_exp','parser_ply.py',425),
  ('eq_exp -> expression NE expression','eq_exp',3,'p_eq_exp','parser_ply.py',426),
  ('eq_exp -> expression LOR expression','eq_exp',3,'p_eq_exp','parser_ply.py',427),
  ('eq_exp -> expression LAND expression','eq_exp',3,'p_eq_exp','parser_ply.py',428),
  ('eq_exp -> expression < expression','eq_exp',3,'p_eq_exp','parser_ply.py',429),
  ('eq_exp -> expression > expression','eq_exp',3,'p_eq_exp','parser_ply.py',430),
  ('eq_exp -> expression GE expression','eq_exp',3,'p_eq_exp','parser_ply.py',431),
  ('eq_exp -> expression LE expression','eq_exp',3,'p_eq_exp','parser_ply.py',432),
  ('compound_statement -> { statement_list }','compound_statement',3,'p_compound_statement','parser_ply.py',437),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','parser_ply.py',438),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_ply.py',444),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_ply.py',445),
]
